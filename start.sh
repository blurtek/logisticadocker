#!/bin/sh

echo "üöÄ Iniciando MueblesWow en Coolify..."

# Configurar variables de entorno
export NODE_ENV=production
export DATABASE_URL="postgresql://muebleswow:${POSTGRES_PASSWORD:-muebleswow123}@localhost:5432/muebleswow"

# Iniciar PostgreSQL
echo "üìä Iniciando PostgreSQL..."
su-exec postgres postgres -D /var/lib/postgresql/data &
PG_PID=$!

# Esperar a que PostgreSQL est√© listo
echo "‚è≥ Esperando PostgreSQL..."
sleep 10

# Verificar que PostgreSQL est√© funcionando
until pg_isready -h localhost -p 5432 -U muebleswow; do
    echo "Esperando PostgreSQL..."
    sleep 2
done

echo "‚úÖ PostgreSQL listo"

# Ejecutar migraciones
echo "üóÑÔ∏è Ejecutando migraciones..."
cd /app/backend
npx prisma migrate deploy

# Ejecutar seed
echo "üå± Ejecutando seed..."
npx prisma db seed

# Iniciar backend
echo "üîß Iniciando backend..."
npm start &
BACKEND_PID=$!

# Esperar a que el backend est√© listo
echo "‚è≥ Esperando backend..."
sleep 5

# Verificar que el backend est√© funcionando
until curl -f http://localhost:3001/health > /dev/null 2>&1; do
    echo "Esperando backend..."
    sleep 2
done

echo "‚úÖ Backend listo"

# Iniciar Nginx
echo "üåê Iniciando Nginx..."
nginx -g "daemon off;" &
NGINX_PID=$!

echo "üéâ MueblesWow iniciado correctamente!"
echo "üìã URLs disponibles:"
echo "   üîê Panel Admin:     http://localhost/"
echo "   üë• Panel Clientes:  http://localhost/public/"
echo "   üîß Backend API:     http://localhost/api/"

# Funci√≥n de limpieza
cleanup() {
    echo "üõë Deteniendo servicios..."
    kill $BACKEND_PID $NGINX_PID $PG_PID 2>/dev/null
    exit 0
}

# Capturar se√±ales de terminaci√≥n
trap cleanup SIGTERM SIGINT

# Mantener el script ejecut√°ndose
wait
